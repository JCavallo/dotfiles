#!/usr/bin/env bash
# Thanks @ThePrimagen for this <3

# Looks for files $HOME/.sessionizer_search_folders*, which contain a list of
# directories which will be scanned for sub-directories. Use "$HOME" rather
# than "~"
#
# Add paths found in $HOME/.sessionizer_folders as folders to always add

(ls $HOME/.sessionizer_* >/dev/null 2>/dev/null)

if [[ $? != 0 ]]; then
    >&2 echo .sessionizer_folders / .sessionizer_search_folders not found
    exit 1
fi

touch "$HOME/.sessionizer_folders"
touch "$HOME/.sessionizer_search_folders"

if [[ $# -eq 1 ]]; then
    selected=$1
else
    selected=$( \
        ( \
            (tmux list-sessions -F '#{session_name} #{session_last_attached}' | \
                sort --reverse -k 2 | cut -f 1 -d ' ' | sed -e 's:^:[running] :') \
            && \
            (find \
                $(sed -e "s:\$HOME:$HOME:g" ~/.sessionizer_search_folders* \
                    | tr '\n' ' ') \
                -mindepth 1 -maxdepth 1 -type d 2>/dev/null; \
                sed -e "s:\$HOME:$HOME:g" ~/.sessionizer_folders*) \
        ) \
        | grep -v '/\.' | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

if [[ "${selected#\[running\]}" != "$selected" ]]; then
    selected_name="${selected#\[running\]\ }"
    tmux_running=1
else
    selected_name=$(basename "$selected" | tr . _)
    tmux_running=$(pgrep tmux)
fi

if ([[ -z $TMUX ]] && [[ -z $tmux_running ]]) || \
        ! tmux has-session -t="$selected_name" 2> /dev/null; then
    tmux new-session -ds "$selected_name" -c "$selected"
    if [[ -f "$selected/.tmux-session-init" ]]; then
        sessionizer_session_folder="$selected" \
            sessionizer_session_name="$selected_name" envsubst < \
                "$selected/.tmux-session-init" | \
            while read -r line; do
            tmux $line
        done
    fi
fi

if [[ "$TMUX" != "" ]]; then
    tmux switch-client -t "$selected_name"
else
    tmux attach -t "$selected_name"
fi
