# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Remove title bar
default_border pixel 0

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:monofur, FontAwesome 14

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec alacritty
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+a kill

# Menu
set $menu_cmd 'kitty --class=launcher env TERMINAL_COMMAND=" " sway-launcher'
set $runner_cmd "kitty --class=launcher 'command-runner'"
set $wallpaper_cmd "kitty --class=launcher wallpaper"
set $screen_select_cmd 'grim -g "$(slurp)" - | wl-copy'
set $screen_full_cmd 'grim - | wl-copy'
set $screen_select_store_cmd 'grim -g "$(slurp)" /tmp/ps_$(date +"%Y%m%d%H%M%S").png'
set $screen_full_store_cmd 'grim /tmp/ps_$(date +"%Y%m%d%H%M%S").png'
bindsym $mod+d exec $menu_cmd
bindsym $mod+Shift+d exec $runner_cmd
bindsym $mod+p exec $wallpaper_cmd
bindsym $mod+a exec "toggle-theme"
bindsym $mod+y exec $screen_select_cmd
bindsym $mod+Shift+y exec $screen_full_cmd

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# move workspace on outputs
bindsym $mod+Mod1+h exec swaymsg move workspace to output left
bindsym $mod+Mod1+j exec swaymsg move workspace to output down
bindsym $mod+Mod1+k exec swaymsg move workspace to output up
bindsym $mod+Mod1+l exec swaymsg move workspace to output right

# alternatively, you can use the cursor keys:
bindsym $mod+Mod1+Left exec swaymsg move workspace to output left
bindsym $mod+Mod1+Down exec swaymsg move workspace to output down
bindsym $mod+Mod1+Up exec swaymsg move workspace to output up
bindsym $mod+Mod1+Right exec swaymsg move workspace to output right

# split in horizontal orientation
bindsym $mod+Ctrl+h split h

# split in vertical orientation
bindsym $mod+Ctrl+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+z layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+b focus mode_toggle

# Back and forth workspaces
bindsym $mod+space exec swaymsg workspace back_and_forth

# focus the parent container
bindsym $mod+q focus parent

# focus the child container
#bindsym $mod+d focus child

# Use Tab to switch workspaces
bindsym $mod+Tab workspace next_on_output
bindsym $mod+Shift+Tab workspace prev_on_output

# Hardcode some workspaces
set $tools_workspace "Tools:"
set $dev_workspace "Term:"
set $browser_workspace "Web:"
set $document_workspace "Docs:"
set $test_workspace "6"
set $steam_workspace "Steam:"
set $main_workspace ""
set $note_workspace "Notes"

# Move workspace to another output
bindsym $mod+x move workspace to output right

# switch to workspace
bindsym $mod+ampersand workspace $tools_workspace
bindsym $mod+1 workspace $tools_workspace
bindsym $mod+eacute workspace $dev_workspace
bindsym $mod+2 workspace $dev_workspace
bindsym $mod+quotedbl workspace $browser_workspace
bindsym $mod+3 workspace $browser_workspace
bindsym $mod+apostrophe workspace $document_workspace
bindsym $mod+4 workspace $document_workspace
bindsym $mod+parenleft workspace 5
bindsym $mod+5 workspace 5
bindsym $mod+minus workspace $test_workspace
bindsym $mod+6 workspace $test_workspace
bindsym $mod+egrave workspace $steam_workspace
bindsym $mod+7 workspace $steam_workspace
bindsym $mod+underscore workspace 8
bindsym $mod+8 workspace 8
bindsym $mod+ccedilla workspace 9
bindsym $mod+9 workspace 9
bindsym $mod+agrave workspace $main_workspace
bindsym $mod+0 workspace $main_workspace
bindsym $mod+n workspace $note_workspace

# move focused container to workspace
#bindsym $mod+Shift+ampersand move container to workspace $tools_workspace
bindsym $mod+Shift+1 move container to workspace $tools_workspace
bindsym $mod+Shift+eacute move container to workspace $dev_workspace
bindsym $mod+Shift+2 move container to workspace $dev_workspace
bindsym $mod+Shift+quotedbl move container to workspace $browser_workspace
bindsym $mod+Shift+3 move container to workspace $browser_workspace
bindsym $mod+Shift+apostrophe move container to workspace $document_workspace
bindsym $mod+Shift+4 move container to workspace $document_workspace
#bindsym $mod+Shift+parenleft move container to workspace 5
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+minus move container to workspace $test_workspace
bindsym $mod+Shift+6 move container to workspace $test_workspace
bindsym $mod+Shift+egrave move container to workspace $steam_workspace
bindsym $mod+Shift+7 move container to workspace $steam_workspace
bindsym $mod+Shift+underscore move container to workspace 8
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+ccedilla move container to workspace 9
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+agrave move container to workspace $main_workspace
bindsym $mod+Shift+0 move container to workspace $main_workspace
bindsym $mod+Shift+n move container to workspace $note_workspace

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'swaymsg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize shrink height 10 px or 10 ppt
        bindsym Up resize grow height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Pulse Audio controls
set $volume_up 'pactl -- set-sink-volume @DEFAULT_SINK@ +5%'
set $volume_down 'pactl -- set-sink-volume @DEFAULT_SINK@ -5%'
set $mute_toggle 'pactl -- set-sink-mute @DEFAULT_SINK@ toggle'
set $mic_toggle 'pactl set-source-mute @DEFAULT_SOURCE@ toggle'
# set $volume_up 'pactl -- set-sink-volume $(pactl list sinks | grep -B 1 "State: RUNNING" | grep Sink | sed -e "s:.*#::") +5%'
# set $volume_down 'pactl -- set-sink-volume $(pactl list sinks | grep -B 1 "State: RUNNING" | grep Sink | sed -e "s:.*#::") -5%'
# set $mute_toggle 'pactl -- set-sink-mute $(pactl list sinks | grep -B 1 "State: RUNNING" | grep Sink | sed -e "s:.*#::") toggle'
bindsym XF86AudioRaiseVolume exec $volume_up
bindsym XF86AudioLowerVolume exec $volume_down
bindsym XF86AudioMute exec $mute_toggle
bindsym XF86AudioMicMute exec $mic_toggle

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# Set monitors
set $laptop_screen "eDP1"
set $external_screen "HDMI1"

workspace $tools_workspace output $external_screen
workspace $dev_workspace output $external_screen
workspace $browser_workspace output $external_screen
workspace $document_workspace output $external_screen
workspace $steam_workspace output $laptop_screen
workspace $main_workspace output $laptop_screen

assign [class="Tryton"] $tools_workspace
assign [app_id="tryton"] $tools_workspace
assign [class="Chrome"] $browser_workspace
assign [class="chrome"] $browser_workspace
assign [class="google-chrome"] $browser_workspace
assign [class="google-chrome-beta"] $browser_workspace
assign [class="Google-chrome-beta"] $browser_workspace
assign [class="brave-browser"] $browser_workspace
assign [class="Brave-browser"] $browser_workspace
assign [class="brave"] $browser_workspace
assign [class="Steam"] $steam_workspace

# Libreoffice is not very nice
assign [class="libreoffice"] $document_workspace
assign [class="libreoffice-startcenter"] $document_workspace
assign [class="Soffice"] $document_workspace

# Screenshot tooling
set $ps1 Print
set $ps2 Control+Print
set $ps3 Alt+Print
set $ps4 Alt+Control+Print
 
bindsym $ps1 exec grim - | wl-copy
bindsym $ps2 exec grim -g "$(slurp)" - | wl-copy
bindsym $ps3 exec grim /tmp/ps_$(date +"%Y%m%d%H%M%S").png
bindsym $ps4 exec grim -g "$(slurp)" /tmp/ps_$(date +"%Y%m%d%H%M%S").png

# Auto fade non-focused windowed
exec_always python3 ~/bin/sway-fader

# Notification Daemon
exec_always mako
exec --no-startup-id swaymsg "workspace $browser_workspace;"

# Screen sharing
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway XDG_SESSION_TYPE=wayland

for_window [app_id="^.*"] opacity 0.5
for_window [app_id="^.*$"] opacity 0.9
for_window [app_id="^launcher$"] floating enable, opacity 0.8, sticky enable, resize set 60 ppt 60 ppt, border pixel 10

# Color settings
# client.focused #917944 #917944 #000088 #917944
# client.focused_inactive #2C2C2C #2C2C2C #ffffff #2C2C2C
# client.unfocused #2C2C2C #2C2C2C #ffffff #2C2C2C
# client.urgent #FF0000 #00C1FF #000088 #00C1FF

# Manage gaps
mode "gaps" {
        # outer gaps
        bindsym h gaps outer current minus 10
        bindsym l gaps outer current plus 10

        # inner gaps
        bindsym j gaps inner current minus 10
        bindsym k gaps inner current plus 10

        # For mono panes
        bindsym g exec "swaymsg gaps top current set 30 && swaymsg gaps bottom current set 10 && swaymsg gaps left current set 200 && swaymsg gaps right current set 200 && swaymsg mode default"

        # For multi panes : default
        bindsym d exec "swaymsg gaps outer current set 0 && swaymsg gaps inner current set 30 && swaymsg gaps bottom current set 80 && swaymsg mode default"

        # For small screens
        bindsym s exec "swaymsg gaps outer current set 0 && swaymsg gaps inner current set 10 && swaymsg gaps bottom current set 10 && swaymsg mode default"

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bar {
    swaybar_command launch_waybar
    gaps 0
}

bindsym $mod+g mode "gaps"

# gaps
gaps inner 30

# 4K gaps
# gaps top 90
# gaps left 140
# gaps right 140
# gaps bottom 0

output Virtual-1 mode --custom "3840x2160@60Hz"

# Rounded corners
# border_radius 20


# Sway Specific
# input * xkb_layout "fr"
# input * xkb_options "compose:caps,numpad:mac"
input * xkb_layout "us"
input * xkb_variant "altgr-intl"
input * xkb_options compose:sclk
input * repeat_delay 200
input * repeat_rate 60
exec_always rm -f /tmp/.current_layout

# Get touchpad name from "swaymsg -t get_inputs"
input "type:touchpad" {
    dwt enabled
    tap enabled
    middle_emulation enabled
}
